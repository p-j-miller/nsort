This program requires a C99 compiler.
There are normally no compiler warnings (or errors) when compiling these program.

To compile the program under Linux try:
 gcc -march=native -Ofast -std=c99 -Wall -o nsort nsort.c atof.c 
 
 
 then ./nsort -h to run
 [this has been tested with gcc 9.3.0 under Ubuntu 20.04 LTS ] 
 Note the standard Unix command sort is much more flexible than nsort so there is very little to be gained by actually using nsort on Linux.
 
 Under Windows (tested with TDM-GCC 9.2.0 ): 
  gcc -march=native -Ofast -std=c99 -Wall -o nsort.exe nsort.c atof.c 
   
  then nsort.exe -h to run
  
  Note the built in windows command line command sort cannot do numeric sorting and nsort was created to fill this gap.
  
  There is a makefile and .dev project file created by dev-c++ which should work as long as a recent c compiler (eg TDM-GCC 9.2.0) is installed and setup in the dev-c++ IDE.
  
USE:  
 nsort is a filter (input from stdin and output to stdout) so to sort in numerical order demo1M.csv (supplied and which has 1 million lines) and put the result in sorted1M.csv use:
  nsort -nv < demo1M.csv >sorted1M.csv
  
  The file sorted1M-ok.csv is the correct result which can be checked by using (for linux use cmp rather than comp)
  
	comp sorted1M.csv  sorted1M-ok.csv

 nsort sorts lines into increasing order.

 Usage: nsort [-nquv?h]
  -n lines are assumed to start with numbers and sorting is done on these.
     if the numbers are identical the lines are sorted as strings
     non-numeric lines will sort first (so a csv files header should stay first)
  -q sort on initial numbers in double quotes (implies -n)
     otherwise sort lines as strings
  -u only print lines that are unique (ie deletes duplicates)
  -v verbose output (to stderr) - prints execution time etc
  -? or -h prints (this) help message then exists
